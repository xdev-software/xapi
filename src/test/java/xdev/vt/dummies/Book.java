
package xdev.vt.dummies;

/*-
 * #%L
 * XDEV Application Framework
 * %%
 * Copyright (C) 2003 - 2020 XDEV Software
 * %%
 * This program is free software: you can redistribute it and/or modify
 * it under the terms of the GNU Lesser General Public License as
 * published by the Free Software Foundation, either version 3 of the
 * License, or (at your option) any later version.
 * 
 * This program is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 * GNU General Lesser Public License for more details.
 * 
 * You should have received a copy of the GNU General Lesser Public
 * License along with this program.  If not, see
 * <http://www.gnu.org/licenses/lgpl-3.0.html>.
 * #L%
 */

import java.text.DateFormat;
import java.util.Date;
import java.util.Locale;

import org.junit.Ignore;

import xdev.db.DBException;
import xdev.db.DataType;
import xdev.lang.StaticInstanceSupport;
import xdev.ui.text.TextFormat;
import xdev.vt.VirtualTable;
import xdev.vt.VirtualTableColumn;

@SuppressWarnings("deprecation")
@Ignore
public class Book
extends VirtualTable implements StaticInstanceSupport //аз{GENERATED-CODE-LINE:VT_SUPERCLASS}
{
	/**
	  * The testdata wich is filled in the VT
	  * <p>
	  * <b>Note:</b>The indexcount of each array has to be the same
	  * </p>
	*/
	
	private static Object[] weigth = {70.3,60.4,55.9,104.4,80.0,30.5};
	private static Object[] description = {"Harry Potter", "Lord of the Rings", "Galileo Openbook", "Bible", "Cookbook", "Bluebear"};
	private static Object[] company = {"print shop Miami","print shop San Francisco", "print shop Chicago", "print shop Berlin", "print shop London", "print shop Paris"};
	private static Object[] pageCount = {222, 33333, 1000, 10000, 3456, 1234};
	private static Object[] expenses = {700.3,600.4,550.9,1040.4,8000.0,3000.5};
	private static Object[] genre = {"Fantasy","Learning", "Children", "Religion", "Computer", "Cooking"};
	private static Object[] size = {1.80,1.56,2.00,1.92,1.68,1.82};
	private static Object[] coverColor = {"brown","blue", "grey", "black", "red", "yellow"};
	private static Object[] shortDescription = {"Miami","San Francisco", "Chicago", "Berlin", "London", "Paris"};
	private static Object[] date = {new Date(90,5,11),new Date(50,5,3), new Date (40,3,10), new Date(50,2,4), new Date(90,2,6), new Date(80,3,4)};
	
	
	/**
	  * The autogenerated code wich contains the creation of the VT columns
	*/
	
	// Generated code, do not edit!аз{GENERATED-CODE-BLOCK-START:VIRTUAL_TABLE}
	public final static VirtualTableColumn<Integer> id;
	public final static VirtualTableColumn<Double> Weight;
	public final static VirtualTableColumn<String> Description;
	public final static VirtualTableColumn<Integer> PageCount;
	public final static VirtualTableColumn<String> Company;
	public final static VirtualTableColumn<Date> PrintDate;
	public final static VirtualTableColumn<Double> Expense;
	public final static VirtualTableColumn<String> Genre;
	public final static VirtualTableColumn<Double> Size;
	public final static VirtualTableColumn<String> CoverColor;
	public final static VirtualTableColumn<String> ShortDescription;
	
	
	static
	{
		id = new VirtualTableColumn<Integer>("id");
		id.setType(DataType.INTEGER);
		id.setAutoIncrement(true);
		id.setDefaultValue(null);
		id.setPreferredWidth(100);
		id.setTextFormat(TextFormat.getPlainInstance());
		
		Weight = new VirtualTableColumn<Double>("Weight");
		Weight.setType(DataType.DOUBLE);
		Weight.setDefaultValue(null);
		Weight.setPreferredWidth(100);
		Weight.setTextFormat(TextFormat.getNumberInstance(Locale.getDefault(),null,2,2,true,false));
		
		Description = new VirtualTableColumn<String>("Description");
		Description.setType(DataType.VARCHAR,50);
		Description.setDefaultValue("");
		Description.setPreferredWidth(100);
		Description.setTextFormat(TextFormat.getPlainInstance());
		
		PageCount = new VirtualTableColumn<Integer>("PageCount");
		PageCount.setType(DataType.INTEGER);
		PageCount.setDefaultValue(null);
		PageCount.setPreferredWidth(100);
		PageCount.setTextFormat(TextFormat.getNumberInstance(Locale.getDefault(),null,2,2,true,false));
		
		Company = new VirtualTableColumn<String>("Company");
		Company.setType(DataType.VARCHAR,50);
		Company.setDefaultValue("");
		Company.setPreferredWidth(100);
		Company.setTextFormat(TextFormat.getPlainInstance());
		
		PrintDate = new VirtualTableColumn<Date>("PrintDate");
		PrintDate.setType(DataType.DATE);
		PrintDate.setDefaultValue(null);
		PrintDate.setPreferredWidth(100);
		PrintDate.setTextFormat(TextFormat.getDateInstance(Locale.getDefault(),null,TextFormat.USE_DATE_ONLY,DateFormat.MEDIUM,DateFormat.MEDIUM));
		
		Expense = new VirtualTableColumn<Double>("Expense");
		Expense.setType(DataType.DOUBLE);
		Expense.setDefaultValue(null);
		Expense.setPreferredWidth(100);
		Expense.setTextFormat(TextFormat.getNumberInstance(Locale.getDefault(),null,2,2,true,false));
		
		Genre = new VirtualTableColumn<String>("Genre");
		Genre.setType(DataType.VARCHAR,50);
		Genre.setDefaultValue("");
		Genre.setPreferredWidth(100);
		Genre.setTextFormat(TextFormat.getPlainInstance());
		
		Size = new VirtualTableColumn<Double>("Size");
		Size.setType(DataType.DOUBLE);
		Size.setDefaultValue(null);
		Size.setPreferredWidth(100);
		Size.setTextFormat(TextFormat.getNumberInstance(Locale.getDefault(),null,2,2,true,false));
		
		CoverColor = new VirtualTableColumn<String>("CoverColor");
		CoverColor.setType(DataType.VARCHAR,50);
		CoverColor.setDefaultValue("");
		CoverColor.setPreferredWidth(100);
		CoverColor.setTextFormat(TextFormat.getPlainInstance());
		
		ShortDescription = new VirtualTableColumn<String>("ShortDescription");
		ShortDescription.setType(DataType.VARCHAR,50);
		ShortDescription.setDefaultValue("");
		ShortDescription.setPreferredWidth(100);
		ShortDescription.setTextFormat(TextFormat.getPlainInstance());
	}
	
	
	public Book()
	{
		super(Book.class.getName(),"Book",id,Weight,Description,PageCount,Company,PrintDate,Expense,Genre,Size,CoverColor,ShortDescription);
	
		setPrimaryColumn(id);
	
	}
	
	
	public final static Book VT = new Book();
	
	
	public static Book getInstance()
	{
		return VT;
	}
	// End generated codeаз{GENERATED-CODE-BLOCK-END:VIRTUAL_TABLE}


	/**
	  * Creates as much rows as the value of the given parameter, filled with example data 
	  *  
	  * @param rowcount
	  *
	  */

	public void VtFill(int rows)
		{
		
			
			
			int e = 0;
			int f = 0;
			int d = 0;
			
			
		for(int i = 0; i< rows; i++)
		{
	
				if(e<weigth.length)
				{
					Object[] in = {weigth[f],description[e],pageCount[f], company[d]
					,date[f], expenses[f]
					, genre[f], size[f],coverColor[f], shortDescription[f]};
					
					try
					{
						this.addRow(false, in );
						
					}
					catch(DBException ex)
					{
						ex.printStackTrace();
					}
					
					
					if(f<weigth.length-1)
					f++;
					else
					{
						f= 0;
						if(d<weigth.length-1)
						{
							d++;
						}
						
						else
						{
							d= 0;
							e++;
						}
						
						
					}
				}
				
				else
				{
					e=0;
					f= 1;
		
				
				}
			
			
		}
	}
	
	
	public final static void main(String args[])
	{
		final  Book vt	= new Book();
		
		//param = number of wished rows
		vt.VtFill(90);
		
		
		
		
	}

}
