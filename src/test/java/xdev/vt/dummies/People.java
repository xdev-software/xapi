/*
 * XDEV Application Framework - XDEV Application Framework
 * Copyright © 2003 XDEV Software (https://xdev.software)
 *
 * This program is free software: you can redistribute it and/or modify
 * it under the terms of the GNU Lesser General Public License as published by
 * the Free Software Foundation, either version 3 of the License, or
 * (at your option) any later version.
 *
 * This program is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 * GNU Lesser General Public License for more details.
 *
 * You should have received a copy of the GNU Lesser General Public License
 * along with this program.  If not, see <http://www.gnu.org/licenses/>.
 */

package xdev.vt.dummies;

import java.sql.Date;
import java.util.Locale;

import org.junit.Ignore;

import xdev.db.DBException;
import xdev.db.DataType;
import xdev.lang.StaticInstanceSupport;
import xdev.ui.text.TextFormat;
import xdev.vt.VirtualTable;
import xdev.vt.VirtualTableColumn;

@Ignore
@SuppressWarnings("deprecation")
public class People
extends VirtualTable implements StaticInstanceSupport //аз{GENERATED-CODE-LINE:VT_SUPERCLASS}
{
	
	/**
	  * The testdata wich is filled in the VT.
	  * <p>
	  * <b>Note:</b>The indexcount of each array has to be the same
	  * </p>
	*/
	
	private static Object[] weight = {70.3,60.4,55.9,104.4,80.0,30.5};
	private static Object[] name = {"Merkel", "Lucas", "Richmond", "Heffernan", "Pachino", "Clinton"};
	private static Object[] company = {"IBM","XDEV", "SUN", "SONY", "MICROSOFT", "APPLE"};
	private static Object[] preName = {"Angela", "George", "Charles", "Doug", "Freddy", "Bill"};
	private static Object[] salary = {700.3,600.4,550.9,1040.4,8000.0,3000.5};
	private static Object[] gender = {"M","W", "M", "W", "W", "M"};
	private static Object[] size = {1.80,1.56,2.00,1.92,1.68,1.82};
	private static Object[] haircolor = {"brown","blue", "grey", "black", "red", "blond"};
	private static Object[] location = {"Miami","San Francisco", "Chicago", "Berlin", "London", "Paris"};
	private static Object[] date = {new Date(90,5,11),new Date(50,5,3), new Date (40,3,10), new Date(50,2,4), new Date(90,2,6), new Date(80,3,4)};
	
	
	/**
	  * The autogenerated code wich contains the creation of the VT columns.
	*/
	
	// Generated code, do not edit!аз{GENERATED-CODE-BLOCK-START:VIRTUAL_TABLE}
	public final static VirtualTableColumn<Integer> id;
	public final static VirtualTableColumn<Double> Weight;
	public final static VirtualTableColumn<String> Name;
	public final static VirtualTableColumn<String> PreName;
	public final static VirtualTableColumn<String> Company;
	public final static VirtualTableColumn<String> DateOfBirth;
	public final static VirtualTableColumn<String> Salary;
	public final static VirtualTableColumn<String> Gender;
	public final static VirtualTableColumn<Double> Size;
	public final static VirtualTableColumn<String> HairColor;
	public final static VirtualTableColumn<String> Location;
	
	
	static
	{
		id = new VirtualTableColumn<Integer>("id");
		id.setType(DataType.INTEGER);
		id.setAutoIncrement(true);
		id.setDefaultValue(null);
		id.setPreferredWidth(100);
		id.setTextFormat(TextFormat.getPlainInstance());
		
		Weight = new VirtualTableColumn<Double>("Weight");
		Weight.setType(DataType.DOUBLE);
		Weight.setDefaultValue(null);
		Weight.setPreferredWidth(100);
		Weight.setTextFormat(TextFormat.getNumberInstance(Locale.getDefault(),null,2,2,true,false));
		
		Name = new VirtualTableColumn<String>("Name");
		Name.setType(DataType.VARCHAR,50);
		Name.setDefaultValue("");
		Name.setPreferredWidth(100);
		Name.setTextFormat(TextFormat.getPlainInstance());
		
		PreName = new VirtualTableColumn<String>("PreName");
		PreName.setType(DataType.VARCHAR,50);
		PreName.setDefaultValue("");
		PreName.setPreferredWidth(100);
		PreName.setTextFormat(TextFormat.getPlainInstance());
		
		Company = new VirtualTableColumn<String>("Company");
		Company.setType(DataType.VARCHAR,50);
		Company.setDefaultValue("");
		Company.setPreferredWidth(100);
		Company.setTextFormat(TextFormat.getPlainInstance());
		
		DateOfBirth = new VirtualTableColumn<String>("DateOfBirth");
		DateOfBirth.setType(DataType.VARCHAR,50);
		DateOfBirth.setDefaultValue("");
		DateOfBirth.setPreferredWidth(100);
		DateOfBirth.setTextFormat(TextFormat.getPlainInstance());
		
		Salary = new VirtualTableColumn<String>("Salary");
		Salary.setType(DataType.VARCHAR,50);
		Salary.setDefaultValue("");
		Salary.setPreferredWidth(100);
		Salary.setTextFormat(TextFormat.getPlainInstance());
		
		Gender = new VirtualTableColumn<String>("Gender");
		Gender.setType(DataType.VARCHAR,50);
		Gender.setDefaultValue("");
		Gender.setPreferredWidth(100);
		Gender.setTextFormat(TextFormat.getPlainInstance());
		
		Size = new VirtualTableColumn<Double>("Size");
		Size.setType(DataType.DOUBLE);
		Size.setDefaultValue(null);
		Size.setPreferredWidth(100);
		Size.setTextFormat(TextFormat.getNumberInstance(Locale.getDefault(),null,2,2,true,false));
		
		HairColor = new VirtualTableColumn<String>("HairColor");
		HairColor.setType(DataType.VARCHAR,50);
		HairColor.setDefaultValue("");
		HairColor.setPreferredWidth(100);
		HairColor.setTextFormat(TextFormat.getPlainInstance());
		
		Location = new VirtualTableColumn<String>("Location");
		Location.setType(DataType.VARCHAR,50);
		Location.setDefaultValue("");
		Location.setPreferredWidth(100);
		Location.setTextFormat(TextFormat.getPlainInstance());
	}
	
	
	public People()
	{
		super(People.class.getName(),"People",id,Weight,Name,PreName,Company,DateOfBirth,Salary,Gender,Size,HairColor,Location);
	
		setPrimaryColumn(id);
	
	}
	
	
	public final static People VT = new People();
	
	
	public static People getInstance()
	{
		return VT;
	}
	// End generated codeаз{GENERATED-CODE-BLOCK-END:VIRTUAL_TABLE}

	/**
	  * Creates as much rows as the value of the given parameter, filled with example data .
	  *  
	  * @param rowcount
	  *
	  */

	public void VtFill(int rows)
	{
					
						
						
						int e = 0;
						int f = 0;
						int d = 0;
						
						
					for(int i = 0; i< rows; i++)
					{
				
							if(e<preName.length)
							{
								Object[] in = {weight[f],name[d],preName[e]
								,company[f], date[f], salary[f]
								, gender[f], size[f], haircolor[f]
								, location[f]};
								
								try
								{
									this.addRow(false, in );
									
								}
								catch(DBException ex)
								{
									ex.printStackTrace();
								}
								
								
								if(f<preName.length-1)
								f++;
								else
								{
									f= 0;
									if(d<preName.length-1)
									{
										d++;
									}
									
									else
									{
										d= 0;
										e++;
									}
									
									
								}
							}
							
							else
							{
								e=0;
								f= 1;
							
							
							}
						

		}
	}
	
}
