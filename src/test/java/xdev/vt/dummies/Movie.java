
package xdev.vt.dummies;

/*-
 * #%L
 * XDEV Application Framework
 * %%
 * Copyright (C) 2003 - 2020 XDEV Software
 * %%
 * This program is free software: you can redistribute it and/or modify
 * it under the terms of the GNU Lesser General Public License as
 * published by the Free Software Foundation, either version 3 of the
 * License, or (at your option) any later version.
 * 
 * This program is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 * GNU General Lesser Public License for more details.
 * 
 * You should have received a copy of the GNU General Lesser Public
 * License along with this program.  If not, see
 * <http://www.gnu.org/licenses/lgpl-3.0.html>.
 * #L%
 */

import java.util.ArrayList;
import java.util.List;
import java.util.Locale;
import java.util.Random;

import org.junit.Ignore;

import xdev.db.DBException;
import xdev.db.DataType;
import xdev.lang.StaticInstanceSupport;
import xdev.ui.text.TextFormat;
import xdev.vt.VirtualTable;
import xdev.vt.VirtualTableColumn;
import xdev.vt.VirtualTableException;

@Ignore
public class Movie
extends VirtualTable implements StaticInstanceSupport //аз{GENERATED-CODE-LINE:VT_SUPERCLASS}
{
	
	
	/**
	  * The testdata wich is filled in the VT.
	  * <p>
	  * <b>Note:</b>The indexcount of each array has to be the same
	  * </p>
	*/
	
	private static Object[] director = {"George Lucas","James Cameron","Steven Spielberg","Joel Coen","David Lynch","Quentin Tarantino"};
	private static Object[] description = {"Eragon", "The Ring", "Saw", "War", "Im Legend", "I Robot"};
	private static Object[] publisher = {"Sony"," EMG", "SouthCoast", "NorthCoast", "EastCoast", "WestCoast"};
	private static Object[] expenses = {16.3,15.99,14.99,5.99,29.99,19.99};
	private static Object[] genre = {"Action","Horror", "Fantasy", "Musical", "Thriller", "Shocker"};
	private static Object[] coverColor = {"brown","blue", "grey", "black", "red", "yellow"};
	private static Object[] shortDescription = {"super Action","Horror pure", "Fantasy", "Muscial", "Thriller", "Shoking"};
	private static Object[] coverPath = {"C:\\Pictures","C:\\CoverPicutures", "C:\\Cover", "C:\\CoverPics", "C:\\Cover_Pictures", "C:\\PictureCover"};
	private static Object[] length = {2.5,1.5,1.2,1.7,3,2};
	private static Object[] part = {2,1,3,2,1,4};
	
	
	/**
	  * The autogenerated code wich contains the creation of the VT columns.
	*/
	
	// Generated code, do not edit!аз{GENERATED-CODE-BLOCK-START:VIRTUAL_TABLE}
	public final static VirtualTableColumn<Integer> id;
	public final static VirtualTableColumn<String> Director;
	public final static VirtualTableColumn<String> Description;
	public final static VirtualTableColumn<String> Publisher;
	public final static VirtualTableColumn<Double> Expense;
	public final static VirtualTableColumn<String> ShortDescription;
	public final static VirtualTableColumn<Integer> Length;
	public final static VirtualTableColumn<Integer> Part;
	public final static VirtualTableColumn<String> Genre;
	public final static VirtualTableColumn<String> CoverPath;
	public final static VirtualTableColumn<String> CoverColor;
	
	
	static
	{
		id = new VirtualTableColumn<Integer>("id");
		id.setType(DataType.INTEGER);
		id.setAutoIncrement(false);
		id.setDefaultValue(null);
		id.setPreferredWidth(100);
		id.setTextFormat(TextFormat.getPlainInstance());
		
		Director = new VirtualTableColumn<String>("Director");
		Director.setType(DataType.VARCHAR,50);
		Director.setDefaultValue("");
		Director.setPreferredWidth(100);
		Director.setTextFormat(TextFormat.getPlainInstance());
		
		Description = new VirtualTableColumn<String>("Description");
		Description.setType(DataType.VARCHAR,50);
		Description.setDefaultValue("");
		Description.setPreferredWidth(100);
		Description.setTextFormat(TextFormat.getPlainInstance());
		
		Publisher = new VirtualTableColumn<String>("Publisher");
		Publisher.setType(DataType.VARCHAR,50);
		Publisher.setDefaultValue("");
		Publisher.setPreferredWidth(100);
		Publisher.setTextFormat(TextFormat.getPlainInstance());
		
		Expense = new VirtualTableColumn<Double>("Expense");
		Expense.setType(DataType.DOUBLE);
		Expense.setDefaultValue(null);
		Expense.setPreferredWidth(100);
		Expense.setTextFormat(TextFormat.getNumberInstance(Locale.getDefault(),null,2,2,true,false));
		
		ShortDescription = new VirtualTableColumn<String>("ShortDescription");
		ShortDescription.setType(DataType.VARCHAR,100);
		ShortDescription.setDefaultValue("");
		ShortDescription.setPreferredWidth(100);
		ShortDescription.setTextFormat(TextFormat.getPlainInstance());
		
		Length = new VirtualTableColumn<Integer>("Length");
		Length.setType(DataType.INTEGER);
		Length.setDefaultValue(null);
		Length.setPreferredWidth(100);
		Length.setTextFormat(TextFormat.getNumberInstance(Locale.getDefault(),null,2,2,true,false));
		
		Part = new VirtualTableColumn<Integer>("Part");
		Part.setType(DataType.INTEGER);
		Part.setDefaultValue(null);
		Part.setPreferredWidth(100);
		Part.setTextFormat(TextFormat.getNumberInstance(Locale.getDefault(),null,2,2,true,false));
		
		Genre = new VirtualTableColumn<String>("Genre");
		Genre.setType(DataType.VARCHAR,50);
		Genre.setDefaultValue("");
		Genre.setPreferredWidth(100);
		Genre.setTextFormat(TextFormat.getPlainInstance());
		
		CoverPath = new VirtualTableColumn<String>("CoverPath");
		CoverPath.setType(DataType.VARCHAR,150);
		CoverPath.setDefaultValue("");
		CoverPath.setPreferredWidth(100);
		CoverPath.setTextFormat(TextFormat.getPlainInstance());
		
		CoverColor = new VirtualTableColumn<String>("CoverColor");
		CoverColor.setType(DataType.VARCHAR,50);
		CoverColor.setDefaultValue("");
		CoverColor.setPreferredWidth(100);
		CoverColor.setTextFormat(TextFormat.getPlainInstance());
	}
	
	
	public Movie()
	{
		super(Movie.class.getName(),"Movie",id,Director,Description,Publisher,Expense,ShortDescription,Length,Part,Genre,CoverPath,CoverColor);
	
		setPrimaryColumn(id);
	
	}
	
	
	public final static Movie VT = new Movie();
	
	
	public static Movie getInstance()
	{
		return VT;
	}
	// End generated codeаз{GENERATED-CODE-BLOCK-END:VIRTUAL_TABLE}

		
	
	
	
	
	
	
	public void vtFillRandom(int rows)
	{
		System.out.println("hi");
		Random rand = new Random();
		try
		{
			for (int r=1; r<rows+1; r++) {
				List<Object> values = new ArrayList<Object>();

				values.add(r);
				values.add(director[rand.nextInt(director.length)]);
				values.add(description[rand.nextInt(description.length)]);
				values.add(publisher[rand.nextInt(publisher.length)]);
				values.add(expenses[rand.nextInt(expenses.length)]);
				values.add(shortDescription[rand.nextInt(shortDescription.length)]);
				values.add(length[rand.nextInt(length.length)]);
				values.add(part[rand.nextInt(part.length)]);
				values.add(genre[rand.nextInt(genre.length)]);
				values.add(coverPath[rand.nextInt(coverPath.length)]);
				values.add(coverColor[rand.nextInt(coverColor.length)]);
				
				
				this.addRow(values, false);
			}
		}
		catch(VirtualTableException e)
		{
			e.printStackTrace();
		}
		catch(DBException e)
		{
			e.printStackTrace();
		}
	}
	
		/**
		  * Creates as much rows as the value of the given parameter, filled with example data 
		  *  
		  * @param rowcount
		  *
		  */
		public void VtFill(int rows)
			{
		
				int e = 0;
				int f = 0;
				int d = 0;
			
				
				for(int i = 1; i< rows+1; i++)
				{
			
						if(e<expenses.length)
						{
							Object[] in = {i,director[f],description[e]
							, publisher[d], expenses[f], shortDescription[f]
							, length[f], part[f], genre[f],coverPath[f], coverColor[f]};
							
							try
							{
								this.addRow(false, in );
								
							}
							catch(DBException ex)
							{
								ex.printStackTrace();
							}
							
							
							if(f<expenses.length-1)
							f++;
							else
							{
								f= 0;
								if(d<expenses.length-1)
								{
									d++;
								}
								
								else
								{
									d= 0;
									e++;
								}
								
								
							}
						}
						
						else
						{
							e=0;
							f= 0;
							d= 0;
							
							
						}
					
					
				}
			}
		
		
		public final static void main(String args[])
		{
			
			
			final  Movie vt	= new Movie();
			
			//param = number of wished rows
			vt.VtFill(90);
		
		}

}
